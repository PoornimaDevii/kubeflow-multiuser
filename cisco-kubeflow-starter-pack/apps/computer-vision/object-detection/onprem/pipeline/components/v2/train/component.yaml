name: Train
description: train object detection and save model from weights
inputs:
  - {name: nfs path, type: String, default: "/mnt/object_detection", description: "NFS Mount path"}
  - {name: s3 path, type: String, description: "add s3 bucket url"}
  - {name: weights, type: String, default: "yolov3-voc_50000.weights", description: "pre-trained weights for training"}
  - {name: cfg_data, type: String, default: "voc.data", description: "data file"}
  - {name: cfg_file, type: String, default: "yolov3-voc.cfg", description: "cfg file"}
  - {name: gpus, type: Integer, default: 4, description: "No of gpus "}
  - {name: momentum, type: String, default: "0.9", description: "momentum"}
  - {name: decay, type: String, default: "0.005", description: "decay"}
  - {name: component, type: String, default: "train", description: "Which component you are running"}
  - {name: timestamp, type: String,  description: "Provide current timestamp"}
  - {name: user_namespace, type: String, default: "anonymous",description: "Provide user's namespace"}

implementation:
  container:
    image: docker.io/poornimadevii/object-detection-train:0.8
    command: ["/opt/deploy.sh"]
    args: [
      --nfs-path, {inputValue: nfs path},
      --s3-path, {inputValue: s3 path},
      --weights, {inputValue: weights},
      --cfg_data, {inputValue: cfg_data},
      --cfg_file, {inputValue: cfg_file},
      --gpus, {inputValue: gpus},
      --momentum, {inputValue: momentum},
      --decay, {inputValue: decay},
      --component, {inputValue: component},
      --timestamp, {inputValue: timestamp},
      --user_namespace, {inputValue: user_namespace}
    ]
